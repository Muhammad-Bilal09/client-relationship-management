datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  slug     String    @unique
  title    String
  body     String
  author   User      @relation(fields: [authorId], references: [id])
  authorId String    @db.ObjectId
  comments Comment[]
}

model Item {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  quantity Int
  price    Float
  category String
  image     String?
  createdAt DateTime @default(now())
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  items     Json
  email     String   @unique
  status    String
  date      String
  country   String
  name      String
  address   String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            String   @id @default(uuid()) @map("_id")
  email         String   @unique
  password      String
  name          String?
  resetToken    String?
  resetTokenExpiry DateTime?
  image         String?
  refreshToken             String?
  accessToken              String?
  address       Address?
  posts         Post[]
   resetTokens   ResetToken[] 
    date        DateTime?
}

model ResetToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  token   String   @unique
  userId  String
  expiry  DateTime
  user    User     @relation(fields: [userId], references: [id])
}


model Document {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  type        String
  date        DateTime
  description String
  fileUrl     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  comment String
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
}

// Address is now represented as an embedded document-like object
type Address {
  street String
  city   String
  state  String
  zip    String
}
